#This sets the number of worker processes to 4. Worker processes are responsible for handling client requests,S
#and having multiple worker processes allows Nginx to handle multiple connections concurrently.
worker_processes 4;

# This block configures event handling. Here, it sets the number of connections that each worker process can handle simultaneously to 1024.
events { worker_connections 1024; }

http {
    server {
        # Nginx listen on port 8080 for incoming connections.
        listen 8080;
        # Sets the character encoding to UTF-8, indicating that responses will be encoded using UTF-8.
        charset utf-8;

        # the default path ("/"). It's used as a catch-all location for requests that don't match any other location block.
        location / {
            proxy_pass http://product:8002;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'Upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
        # handles requests paths that start with "/shopping"
        location ~ ^/shopping {
            # The rewrite directive is used to change the request URI using regular expressions and replacements
            # In this configuration, using it to remove the /shopping and /customer prefix from the request URI before passing the request to the backend servers.
            rewrite ^/shopping/(.*) /$1 break;
            # this line proxies the requests to the backend server at http://shopping:8001.
            proxy_pass http://shopping:8003;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'Upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
        # handles requests paths that start with "/customer"
        location ~ ^/customer {
            rewrite ^/customer/(.*) /$1 break;
            #  this line proxies the requests to the backend server at http://customer:8001.
            proxy_pass http://customer:8001;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'Upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }
}
